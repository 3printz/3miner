schema {
  createKeyspace =
    """
      CREATE KEYSPACE IF NOT EXISTS cchain
      WITH REPLICATION = {
        'class' : 'SimpleStrategy',
        'replication_factor': 1
      };
    """

  createTypePromize =
    """
      CREATE TYPE IF NOT EXISTS cchain.promize (
        bank TEXT,
        id UUID,
        amount TEXT,
        blob TEXT,

        origin_bank TEXT,
        origin_account TEXT,
        origin_zaddress TEXT
      );
    """

  createTypeTransaction =
    """
      CREATE TYPE IF NOT EXISTS cchain.transaction (
        bank TEXT,
        id UUID,

        promize_bank TEXT,
        promize_id UUID,
        promize_amount TEXT,
        promize_blob TEXT,

        from_account TEXT,
        from_bank TEXT,
        from_zaddress TEXT,

        to_account TEXT,
        to_bank TEXT,
        to_zaddress TEXT,

        timestamp BIGINT,
        digsig TEXT,
        type TEXT
      );
    """

  createTypeSignature =
    """
      CREATE TYPE IF NOT EXISTS cchain.signature (
        miner TEXT,
        digsig TEXT
      );
    """

  createTablePromizes =
    """
      CREATE TABLE IF NOT EXISTS cchain.promizes (
        bank TEXT,
        id UUID,
        amount TEXT,
        blob TEXT,
        origin_bank TEXT,
        origin_account TEXT,
        origin_zaddress TEXT,

        PRIMARY KEY(bank, id)
      );
    """

  createTableTrans =
    """
      CREATE TABLE IF NOT EXISTS cchain.trans (
        bank TEXT,
        id UUID,

        promize_bank TEXT,
        promize_id UUID,
        promize_amount TEXT,
        promize_blob TEXT,

        from_account TEXT,
        from_bank TEXT,
        from_zaddress TEXT,

        to_account TEXT,
        to_bank TEXT,
        to_zaddress TEXT,

        timestamp BIGINT,
        digsig TEXT,
        type TEXT,

        PRIMARY KEY(bank, id)
      );
    """

  createTableTransactions =
    """
      CREATE TABLE IF NOT EXISTS cchain.transactions (
        bank TEXT,
        id UUID,

        promize_bank TEXT,
        promize_id UUID,
        promize_amount TEXT,
        promize_blob TEXT,

        from_account TEXT,
        from_bank TEXT,
        from_zaddress TEXT,

        to_account TEXT,
        to_bank TEXT,
        to_zaddress TEXT,

        timestamp BIGINT,
        digsig TEXT,
        type TEXT,

        PRIMARY KEY(bank, id)
      );
    """

  createTableBlocks =
    """
      CREATE TABLE IF NOT EXISTS cchain.blocks (
        miner TEXT,
        id UUID,
        transactions SET<frozen <transaction>>,
        timestamp BIGINT,
        merkle_root TEXT,
        pre_hash TEXT,
        hash TEXT,
        signatures SET<frozen <signature>>,

        PRIMARY KEY(miner, id)
      );
    """

  createTableHashes =
    """
      CREATE TABLE IF NOT EXISTS cchain.hashes (
        hash TEXT,

        PRIMARY KEY(hash)
      );
    """

  createTableUsers =
    """
      CREATE TABLE IF NOT EXISTS cchain.users (
        zaddress TEXT,
        bank TEXT,
        account TEXT,
        public_key TEXT,
        salt TEXT,
        state TEXT,

        PRIMARY KEY(zaddress)
      );
    """

  createFromIndex =
    """
      CREATE INDEX IF NOT EXISTS from_index ON cchain.trans (from_zaddress);
    """

  createToIndex =
    """
      CREATE INDEX IF NOT EXISTS to_index ON cchain.trans (to_zaddress);
    """

  createPromizeIndex =
    """
      CREATE INDEX IF NOT EXISTS promize_index ON cchain.trans (promize_id);
    """

  createTransactionLuceneIndex =
    """
      CREATE CUSTOM INDEX IF NOT EXISTS transaction_lucene_index ON cchain.transactions ()
      USING 'com.stratio.cassandra.lucene.Index'
      WITH OPTIONS = {
        'refresh_seconds': '1',
        'schema': '{
          fields: {
            bank: {type: "string"},
            id: {type: "uuid"},
            from_account: {type: "string"},
            to_account: {type: "string"},
            promize_id: {type: "string"}
          }
        }'
      };
    """

  createPromizeLuceneIndex =
    """
      CREATE CUSTOM INDEX IF NOT EXISTS promize_lucene_index ON cchain.promizes ()
      USING 'com.stratio.cassandra.lucene.Index'
      WITH OPTIONS = {
        'refresh_seconds': '1',
        'schema': '{
          fields: {
            bank: {type: "string"},
            id: {type: "uuid"},
            origin_bank: {type: "string"},
            origin_account: {type: "string"},
            origin_zaddress: {type: "string"}
          }
        }'
      };
    """

  createBlockLuceneIndex =
    """
      CREATE CUSTOM INDEX IF NOT EXISTS block_lucene_index ON cchain.blocks ()
      USING 'com.stratio.cassandra.lucene.Index'
      WITH OPTIONS = {
        'refresh_seconds': '1',
        'schema': '{
          fields: {
            miner: {type: "string"},
            id: {type: "uuid"}
          }
        }'
      };
    """
}

